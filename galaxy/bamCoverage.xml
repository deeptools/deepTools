<tool id="bamCoverage" name="bamCoverage" version="1.0">
  <description>Given a BAM file, generates a coverage bigwig file.  Multiple options available to count reads and normalize coverage.</description>
  <requirements>
    <requirement type="package" version="1.5.1_98e5d8a61431ea8605c0643d991a1a5d8999b4dc">deepTools</requirement>
    <requirement type="package" version="0.1">ucsc_tools</requirement>
    <requirement type="package" version="1.7.1">numpy</requirement>
  </requirements>
  <command>
  bamCoverage

  ##ToDo
  --numberOfProcessors 4

  --bam '$bamInput'
  --bamIndex ${bamInput.metadata.bam_index}
  --outFileName '$outFileName'
  --outFileFormat '$outFileFormat'

  --fragmentLength $fragmentLength
  --binSize $binSize

  #if $scaling.type=='rpkm':
    --normalizeUsingRPKM
  #elif $scaling.type=='1x':
    --normalizeTo1x $scaling.normalizeTo1x
  #elif $scaling.type=='own':
    --scaleFactor $scaling.scaleFactor
  #end if
  
  #if $advancedOpt.showAdvancedOpt == "yes":
    #if $advancedOpt.smoothLength:
      --smoothLength '$advancedOpt.smoothLength'
    #end if

    #if str($advancedOpt.region.value) != '':
      --region '$advancedOpt.region'
    #end if
    $advancedOpt.doNotExtendPairedEnds
    $advancedOpt.ignoreDuplicates

    #if $advancedOpt.minMappingQuality:
      --minMappingQuality '$advancedOpt.minMappingQuality'
    #end if

  #end if
  </command>

  <inputs>
    <param name="bamInput" format="bam" type="data" label="Input BAM file"
       help="The BAM file must be sorted and indexed."/>

    <param name="fragmentLength" type="integer" value="300" min="1"
       label="Length of the average fragment size"
       help ="Reads will be extended to match this length unless they are paired-end, in which case they will be extended to match the fragment length. If this value is set to the read length or smaller, the read will not be extended. *Warning* the fragment length affects the normalization to 1x (see &quot;normalize coverage to 1x&quot;). The formula to normalize using the sequencing depth is genomeSize/(number of mapped reads * fragment length). *NOTE*: If the BAM files contain mated and unmated paired-end reads, unmated reads will be extended to match the fragment length."/>

    <param name="binSize" type="integer" value="50" min="1" 
       label="Bin size in bp"
       help="The genome will be divided in bins (also called tiles) of the specified length. For each bin the overlaping number of fragments (or reads)  will be reported. If only half a fragment overlaps, this fraction will be reported. "/>

    <conditional name="scaling">
      <param name="type" type="select" label="Scaling/Normalization method" >
        <option value="1x">Normalize coverage to 1x</option>
        <option value="rpkm">Normalize to fragments (reads) per kilobase per million (RPKM)</option>
        <option value="own">Set your own scaling factor</option>
        <option value="no">Do not normalize or scale</option>
      </param>
      <when value="rpkm"/>
      <when value="no"/>
      <when value="1x">
        <param name="normalizeTo1x" type="integer" value="2150570000"
           label="Genome size"
           help ="Enter the genome size to normalize the reads counts. Sequencing depth is defined as the total number of mapped reads * fragment length / effective genome size. To use this option, the effective genome size has to be given. Common values are: mm9: 2150570000, hg19:2451960000, dm3:121400000 and ce10:93260000."/>
      </when>
      <when value="own">
        <param name="scaleFactor" type="float" value="1" size="3" 
           label="Scale factor to multiply all values" />
        </when>
    </conditional>

    <param name="outFileFormat" type="select" label="Coverage file format">
        <option value="bigwig" selected="true">bigwig</option>
        <option value="bedgraph">bedgraph</option>
    </param>

    <conditional name="advancedOpt">
        <param name="showAdvancedOpt" type="select" label="Show advanced options" >
            <option value="no" selected="true">no</option>
            <option value="yes">yes</option>
        </param>
      <when value="no" />
      <when value="yes">
         <param name="smoothLength" type="integer" value="1" optional="true" min="1"
           label="Smooth values using the following length (in bp)"
           help ="The smooth length defines a window, larger than the bin size, to average the number of reads. For example, if the bin size is set to 20 bp and the smooth length is set to 60 bp, then, for each bin size the average of it and its left and right neighbors is considered. Any value smaller than the bin size will be ignored and no smoothing will be applied."/>

        <param name="region" type="text" value=""
           label="Region of the genome to limit the operation to"
           help="This is useful when testing parameters to reduce the computing time. The format is chr:start:end, for example &quot;chr10&quot; or &quot;chr10:456700:891000&quot;" />

         <param name="doNotExtendPairedEnds" type="boolean" truevalue="--doNotExtendPairedEnds" falsevalue=""
            label="Do not extend paired ends"
            help="If set, reads are not extended to match the fragment length reported in the BAM file, instead they will be extended to match the fragment length. Default is to extend the reads if paired end information is available."/>

         <param name="ignoreDuplicates" type="boolean" truevalue="--ignoreDuplicates" falsevalue=""
            label="Ignore duplicates"
            help="If set, reads that have the same orientation and start position will be considered only once. If reads are paired, the mate position also has to coincide to ignore a read." /> 

          <param name="minMappingQuality" type="integer" optional="true" value="1" min="1"
            label="Minimum mapping quality"
            help= "If set, only reads that have a mapping quality score higher than the given value are considered"/>
        </when>
    </conditional>
  </inputs>
  <outputs>
    <data format="bigwig" name="outFileName">
        <change_format>
            <when input="outFileFormat" value="bigwig" format="bigwig" />
            <when input="outFileFormat" value="bedgraph" format="bedgraph" />
        </change_format>
    </data>
  </outputs>
  <help>

**What it does**

Given a BAM file, this tool generates a bigWig or bedGraph file of fragment or read coverages. The way the method works is by first calculating all the number of reads (either extended to match the fragment length or not) that overlap each bin in the genome. Bins with zero counts are skipped, i.e. not added to the output file. The resulting read counts can be normalized using either a given scaling factor, the RPKM formula or to get a 1x depth of coverage (RPGC).

-----

.. class:: infomark

Please acknowledge that this tool **is still in development** and we will be very happy to receive feedback from the users. If you run into any trouble please sent an email to `Fidel Ramirez`_.

This tool is developed by the `Bioinformatics and Deep-Sequencing Unit`_ at the `Max Planck Institute for Immunobiology and Epigenetics`_.


.. _Bioinformatics and Deep-Sequencing Unit: http://www3.ie-freiburg.mpg.de/facilities/research-facilities/bioinformatics-and-deep-sequencing-unit/
.. _Max Planck Institute for Immunobiology and Epigenetics: http://www3.ie-freiburg.mpg.de
.. _Fidel Ramirez: ramirez@ie-freiburg.mpg.de

</help>
</tool>
